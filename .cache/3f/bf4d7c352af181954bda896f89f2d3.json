{"id":"project/index.js","dependencies":[{"name":"../src/index.js","loc":{"line":1,"column":20},"parent":"/Users/ringo/Documents/work/moa-flower/project/index.js","resolved":"/Users/ringo/Documents/work/moa-flower/src/index.js"},{"name":"./variable","loc":{"line":2,"column":23},"parent":"/Users/ringo/Documents/work/moa-flower/project/index.js","resolved":"/Users/ringo/Documents/work/moa-flower/project/variable.js"},{"name":"./layers/layer_triangle","loc":{"line":3,"column":30},"parent":"/Users/ringo/Documents/work/moa-flower/project/index.js","resolved":"/Users/ringo/Documents/work/moa-flower/project/layers/layer_triangle.js"},{"name":"./layers/layer_circle","loc":{"line":4,"column":28},"parent":"/Users/ringo/Documents/work/moa-flower/project/index.js","resolved":"/Users/ringo/Documents/work/moa-flower/project/layers/layer_circle.js"}],"generated":{"js":"\n\"use strict\";\n\nvar _index = require(\"../src/index.js\");\n\nvar _variable = require(\"./variable\");\n\nvar _layer_triangle = _interopRequireDefault(require(\"./layers/layer_triangle\"));\n\nvar _layer_circle = _interopRequireDefault(require(\"./layers/layer_circle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar app = new _index.App({\n  length: _variable.global.length,\n  // remain: true,\n  container: document.querySelector('#container')\n}); // if you want to every loop haw the same behavior, make sure the attrubute \"duration\" and \"start\" of different shapes have the same value\n\nsetInterval(function () {\n  app.add.apply(app, _toConsumableArray((0, _layer_circle.default)()).concat(_toConsumableArray((0, _layer_triangle.default)())));\n}, 2000);\napp.run();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":4,"column":0},"source":"project/index.js","original":{"line":1,"column":0}},{"generated":{"line":6,"column":0},"source":"project/index.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":0},"source":"project/index.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"project/index.js","original":{"line":4,"column":0}},{"generated":{"line":26,"column":0},"source":"project/index.js","original":{"line":6,"column":0}},{"name":"app","generated":{"line":26,"column":4},"source":"project/index.js","original":{"line":6,"column":6}},{"generated":{"line":26,"column":7},"source":"project/index.js","original":{"line":6,"column":9}},{"generated":{"line":26,"column":10},"source":"project/index.js","original":{"line":6,"column":12}},{"name":"App","generated":{"line":26,"column":14},"source":"project/index.js","original":{"line":6,"column":16}},{"generated":{"line":26,"column":24},"source":"project/index.js","original":{"line":6,"column":12}},{"generated":{"line":26,"column":25},"source":"project/index.js","original":{"line":6,"column":20}},{"name":"length","generated":{"line":27,"column":0},"source":"project/index.js","original":{"line":7,"column":2}},{"name":"length","generated":{"line":27,"column":2},"source":"project/index.js","original":{"line":7,"column":2}},{"generated":{"line":27,"column":8},"source":"project/index.js","original":{"line":7,"column":8}},{"name":"global","generated":{"line":27,"column":10},"source":"project/index.js","original":{"line":7,"column":10}},{"name":"length","generated":{"line":27,"column":27},"source":"project/index.js","original":{"line":7,"column":17}},{"generated":{"line":27,"column":33},"source":"project/index.js","original":{"line":6,"column":20}},{"generated":{"line":28,"column":0},"source":"project/index.js","original":{"line":8,"column":2}},{"name":"container","generated":{"line":29,"column":0},"source":"project/index.js","original":{"line":9,"column":2}},{"name":"container","generated":{"line":29,"column":2},"source":"project/index.js","original":{"line":9,"column":2}},{"generated":{"line":29,"column":11},"source":"project/index.js","original":{"line":9,"column":11}},{"name":"document","generated":{"line":29,"column":13},"source":"project/index.js","original":{"line":9,"column":13}},{"generated":{"line":29,"column":21},"source":"project/index.js","original":{"line":9,"column":21}},{"name":"querySelector","generated":{"line":29,"column":22},"source":"project/index.js","original":{"line":9,"column":22}},{"generated":{"line":29,"column":35},"source":"project/index.js","original":{"line":9,"column":13}},{"generated":{"line":29,"column":36},"source":"project/index.js","original":{"line":9,"column":36}},{"generated":{"line":29,"column":48},"source":"project/index.js","original":{"line":9,"column":13}},{"generated":{"line":30,"column":0},"source":"project/index.js","original":{"line":6,"column":20}},{"generated":{"line":30,"column":1},"source":"project/index.js","original":{"line":6,"column":12}},{"generated":{"line":30,"column":2},"source":"project/index.js","original":{"line":6,"column":0}},{"generated":{"line":30,"column":4},"source":"project/index.js","original":{"line":12,"column":0}},{"name":"setInterval","generated":{"line":32,"column":0},"source":"project/index.js","original":{"line":13,"column":0}},{"generated":{"line":32,"column":11},"source":"project/index.js","original":{"line":13,"column":11}},{"generated":{"line":32,"column":12},"source":"project/index.js","original":{"line":13,"column":12}},{"generated":{"line":32,"column":24},"source":"project/index.js","original":{"line":13,"column":18}},{"name":"app","generated":{"line":33,"column":0},"source":"project/index.js","original":{"line":14,"column":2}},{"name":"app","generated":{"line":33,"column":2},"source":"project/index.js","original":{"line":14,"column":2}},{"generated":{"line":33,"column":5},"source":"project/index.js","original":{"line":14,"column":5}},{"name":"add","generated":{"line":33,"column":6},"source":"project/index.js","original":{"line":14,"column":6}},{"generated":{"line":33,"column":9},"source":"project/index.js","original":{"line":14,"column":2}},{"name":"app","generated":{"line":33,"column":16},"source":"project/index.js","original":{"line":14,"column":2}},{"generated":{"line":33,"column":19},"source":"project/index.js","original":{"line":14,"column":5}},{"generated":{"line":33,"column":40},"source":"project/index.js","original":{"line":14,"column":13}},{"generated":{"line":33,"column":68},"source":"project/index.js","original":{"line":14,"column":5}},{"generated":{"line":33,"column":96},"source":"project/index.js","original":{"line":14,"column":35}},{"generated":{"line":33,"column":126},"source":"project/index.js","original":{"line":14,"column":5}},{"generated":{"line":33,"column":129},"source":"project/index.js","original":{"line":14,"column":2}},{"generated":{"line":34,"column":0},"source":"project/index.js","original":{"line":15,"column":1}},{"generated":{"line":34,"column":1},"source":"project/index.js","original":{"line":13,"column":11}},{"generated":{"line":34,"column":3},"source":"project/index.js","original":{"line":15,"column":3}},{"generated":{"line":34,"column":7},"source":"project/index.js","original":{"line":13,"column":11}},{"generated":{"line":34,"column":8},"source":"project/index.js","original":{"line":13,"column":0}},{"name":"app","generated":{"line":35,"column":0},"source":"project/index.js","original":{"line":17,"column":0}},{"generated":{"line":35,"column":3},"source":"project/index.js","original":{"line":17,"column":3}},{"name":"run","generated":{"line":35,"column":4},"source":"project/index.js","original":{"line":17,"column":4}},{"generated":{"line":35,"column":7},"source":"project/index.js","original":{"line":17,"column":0}}],"sources":{"project/index.js":"import { App } from \"../src/index.js\";\nimport { global } from './variable';\nimport triangleGenerator from './layers/layer_triangle';\nimport circleGenerator from './layers/layer_circle';\n\nconst app = new App({\n  length: global.length,\n  // remain: true,\n  container: document.querySelector('#container'),\n});\n\n// if you want to every loop haw the same behavior, make sure the attrubute \"duration\" and \"start\" of different shapes have the same value\nsetInterval(() => {\n  app.add(...circleGenerator(), ...triangleGenerator());\n}, 2000);\n\napp.run();"},"lineCount":null}},"error":null,"hash":"dfff8c44e13a0401d5aff4961f57011d","cacheData":{"env":{}}}